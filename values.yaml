# this guy doesn't tag at the moment :(
image: "gargron/mastodon:latest"

## postgres image repository
## postgres image version
## ref: https://hub.docker.com/r/library/postgres/tags/

## Persistence for assets and system
persistence:
  enabled: true

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingAssetsClaim:
  # existingSystemClaim:

  ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  # storageClass:
  accessMode: ReadWriteOnce
  size: 8Gi


# Service dependencies
redisHost: "redis"
redisPort: 6379
dbHost: "db"
dbUser: "postgres"
dbName: "postgres"
dbPort: 5432

postgresql:
    postgresPassword: changeme


# Federation
#localDomain: "192.168.99.100"
localDomain: "social.dotstar.plus"
localHTTPS: false

# Application secrets
# Generate each with the `rake secret` task (`docker-compose run --rm web rake secret` if you use docker compose)
# paperclipSecret: {{ randAlphaNum 32 | b64enc | quote }}
# secretKeyBase: {{ randAlphaNum 32 | b64enc | quote }}
# OTPSecret: {{ randAlphaNum 32 | b64enc | quote }}

# Registrations
# Single user mode will disable registrations and redirect frontpage to the first profile
# SINGLE_USER_MODE: true
# Prevent registrations with following e-mail domains
# EMAIL_DOMAIN_BLACKLIST: example1.com|example2.de|etc
# Only allow registrations with the following e-mail domains
# EMAIL_DOMAIN_WHITELIST: example1.com|example2.de|etc

# Optionally change default language
# DEFAULT_LOCALE: de

# E-mail configuration
# Note: Mailgun and SparkPost (https://sparkpo.st/smtp) each have good free tiers
SMTPServer: "smtp.mailgun.org"
SMTPPort: 587
SMTPLogin: "postmaster@mail.dotstar.plus"
SMTPPassword: "59cf8dc634a2b9b4aebdc2a3fe93a405"
SMTPFromAddress: "masty@social.dotstar.plus"

# Optional asset host for multi-server setups
# CDN_HOST: assets.example.com

# S3 (optional)
# S3_ENABLED: true
# S3_BUCKET:
# AWS_ACCESS_KEY_ID:
# AWS_SECRET_ACCESS_KEY:
# S3_REGION:
# S3_PROTOCOL: http
# S3_HOSTNAME: 192.168.1.123:9000

# S3 (Minio Config (optional) Please check Minio instance for details)
# S3_ENABLED: true
# S3_BUCKET:
# AWS_ACCESS_KEY_ID:
# AWS_SECRET_ACCESS_KEY:
# S3_REGION:
# S3_PROTOCOL: https
# S3_HOSTNAME:
# S3_ENDPOINT:

# Optional alias for S3 if you want to use Cloudfront or Cloudflare in front
# S3_CLOUDFRONT_HOST:

# Streaming API integration
# STREAMING_API_BASE_URL:
